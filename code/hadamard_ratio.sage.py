

# This file was *autogenerated* from the file hadamard_ratio.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_3 = Integer(3); _sage_const_10 = Integer(10); _sage_const_100 = Integer(100)
def hadamard_ratio(L):
    H = abs(L.det())
    for v in L:
        H /= v.norm()
    return ((H ** (_sage_const_1  / L.dimensions()[_sage_const_0 ]))).n()

L = random_matrix(ZZ, _sage_const_3 , x=-_sage_const_10 , y=_sage_const_10 )

def babai(L, w):
    a = w * L.inverse()
    a = a.apply_map(lambda x : x.round())
    return (a, a * L)

w = random_vector(ZZ, _sage_const_3 , x=-_sage_const_100 , y=_sage_const_100 )

print(f"Hadamard Ratio: {hadamard_ratio(L)}")
print(f"Babai: {babai(L, w)}")

